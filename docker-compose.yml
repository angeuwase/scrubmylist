version: "3.7"

services:
    redis:
        image: redis
        ports:
            - 6379:6379
        restart: always

    #flask_app:
        #build:
            #context: .
            #dockerfile: Dockerfile
        #command: gunicorn -b 0.0.0.0:5000 application:application --worker-class=gevent --workers=4 
        env_file: .env
        #environment:
           # - FLASK_ENV: ${FLASK_ENV}
           # - CONFIG_TYPE: $(CONFIG_TYPE)
          #  - SECRET_KEY: $(SECRET_KEY)
           # - MAIL_USERNAME: $(MAIL_USERNAME)
          #  - MAIL_PASSWORD: $(MAIL_PASSWORD)
           # - CELERY_BROKER_UR: redis://redis:6379
          #  - RESULT_BACKEND: redis://redis:6379
       # restart: always
        #ports:
           # - 5000:5000
        #depends_on:
          #  - postgres
    
    #celery_worker:
       # build:
           # context: .
            #dockerfile: Dockerfile
        command: celery -A celery_worker.celery worker --pool=solo --loglevel=info
        env_file: .env
           # - FLASK_ENV: ${FLASK_ENV}
            #- CONFIG_TYPE: $(CONFIG_TYPE)
          #  - SECRET_KEY: $(SECRET_KEY)
           # - MAIL_USERNAME: $(MAIL_USERNAME)
           # - MAIL_PASSWORD: $(MAIL_PASSWORD)
           # - CELERY_BROKER_UR: redis://redis:6379
           # - RESULT_BACKEND: redis://redis:6379
        depends_on:
            - redis
            - flask_app
        restart: always


    postgres:
        env_file: .env
       # environment:
          #POSTGRES_USER: ${POSTGRES_USER}
          #POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
          #POSTGRES_DB: ${POSTGRES_DB}
        image: postgres:latest
        ports:
          - 5432:5432
        restart: always
        volumes:
          - pgdata:/var/lib/postgresql/data

volumes:
    pgdata:

        

